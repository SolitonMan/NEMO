# Generated by Django 2.2.12 on 2020-04-20 12:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('NEMO', '0035_auto_20200403_1430'),
    ]

    operations = [
        migrations.AlterField(
            model_name='account',
            name='owner',
            field=models.ForeignKey(blank=True, help_text='The owner or person responsible for the Account (Cost Center in SIMBA) as imported via SIMBA download nightly', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='activityhistory',
            name='authorizer',
            field=models.ForeignKey(help_text='The staff member who changed the active state of the account, project, or user in question.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='activityhistory',
            name='content_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.ContentType'),
        ),
        migrations.AlterField(
            model_name='alert',
            name='creator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='alert',
            name='user',
            field=models.ForeignKey(blank=True, help_text='The alert will be visible for this user. The alert is visible to all users when this is empty.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='alerts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='area',
            name='core_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='area_core', to='NEMO.Core'),
        ),
        migrations.AlterField(
            model_name='areaaccessrecord',
            name='area',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='NEMO.Area'),
        ),
        migrations.AlterField(
            model_name='areaaccessrecord',
            name='customer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='areaaccessrecord',
            name='project',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='area_access_record_project', to='NEMO.Project'),
        ),
        migrations.AlterField(
            model_name='areaaccessrecord',
            name='staff_charge',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='NEMO.StaffCharge'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='author',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='comment',
            name='hidden_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='hidden_comments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='comment',
            name='tool',
            field=models.ForeignKey(help_text='The tool that this comment relates to.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='NEMO.Tool'),
        ),
        migrations.AlterField(
            model_name='configuration',
            name='tool',
            field=models.ForeignKey(help_text='The tool that this configuration option applies to.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='NEMO.Tool'),
        ),
        migrations.AlterField(
            model_name='configurationhistory',
            name='configuration',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='NEMO.Configuration'),
        ),
        migrations.AlterField(
            model_name='configurationhistory',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='consumable',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='NEMO.ConsumableCategory'),
        ),
        migrations.AlterField(
            model_name='consumable',
            name='core_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='consumable_core', to='NEMO.Core'),
        ),
        migrations.AlterField(
            model_name='consumable',
            name='unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='NEMO.ConsumableUnit'),
        ),
        migrations.AlterField(
            model_name='consumablewithdraw',
            name='consumable',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='NEMO.Consumable'),
        ),
        migrations.AlterField(
            model_name='consumablewithdraw',
            name='customer',
            field=models.ForeignKey(help_text='The user who will use the consumable item.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='consumable_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='consumablewithdraw',
            name='merchant',
            field=models.ForeignKey(help_text='The staff member that performed the withdraw.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='consumable_merchant', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='consumablewithdraw',
            name='project',
            field=models.ForeignKey(help_text='The withdraw will be billed to this project.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='NEMO.Project'),
        ),
        migrations.AlterField(
            model_name='consumablewithdraw',
            name='usage_event',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='consumable_usage_event', to='NEMO.UsageEvent'),
        ),
        migrations.AlterField(
            model_name='contactinformation',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='NEMO.ContactInformationCategory'),
        ),
        migrations.AlterField(
            model_name='contesttransaction',
            name='content_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.ContentType'),
        ),
        migrations.AlterField(
            model_name='contesttransactiondata',
            name='content_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.ContentType'),
        ),
        migrations.AlterField(
            model_name='contesttransactiondata',
            name='contest_transaction',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='NEMO.ContestTransaction'),
        ),
        migrations.AlterField(
            model_name='door',
            name='area',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='doors', to='NEMO.Area'),
        ),
        migrations.AlterField(
            model_name='door',
            name='interlock',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='NEMO.Interlock'),
        ),
        migrations.AlterField(
            model_name='interlock',
            name='card',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='NEMO.InterlockCard'),
        ),
        migrations.AlterField(
            model_name='membershiphistory',
            name='authorizer',
            field=models.ForeignKey(help_text='The staff member who changed the membership status of the account, project, or user in question.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='membershiphistory',
            name='child_content_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='child_content_type', to='contenttypes.ContentType'),
        ),
        migrations.AlterField(
            model_name='membershiphistory',
            name='parent_content_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='parent_content_type', to='contenttypes.ContentType'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='content_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.ContentType'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='physicalaccesslevel',
            name='area',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='NEMO.Area'),
        ),
        migrations.AlterField(
            model_name='physicalaccesslog',
            name='area',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='NEMO.Area'),
        ),
        migrations.AlterField(
            model_name='physicalaccesslog',
            name='door',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='NEMO.Door'),
        ),
        migrations.AlterField(
            model_name='physicalaccesslog',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='project',
            name='account',
            field=models.ForeignKey(help_text='All charges for this project will be billed to the selected account.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='NEMO.Account'),
        ),
        migrations.AlterField(
            model_name='project',
            name='owner',
            field=models.ForeignKey(blank=True, help_text='The owner or person responsible for the Project (Internal Order or WBS Element in SIMBA) as imported via SIMBA download nightly', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='reservation',
            name='cancelled_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='reservation',
            name='creator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reservation_creator', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='reservation',
            name='descendant',
            field=models.OneToOneField(blank=True, help_text='Any time a reservation is moved or resized, the old reservation is cancelled and a new reservation with updated information takes its place. This field links the old reservation to the new one, so the history of reservation moves & changes can be easily tracked.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ancestor', to='NEMO.Reservation'),
        ),
        migrations.AlterField(
            model_name='reservation',
            name='project',
            field=models.ForeignKey(blank=True, help_text='Indicates the intended project for this reservation. A missed reservation would be billed to this project.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='NEMO.Project'),
        ),
        migrations.AlterField(
            model_name='reservation',
            name='tool',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='NEMO.Tool'),
        ),
        migrations.AlterField(
            model_name='reservation',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reservation_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='reservationconfiguration',
            name='configuration',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='NEMO.Configuration'),
        ),
        migrations.AlterField(
            model_name='reservationconfiguration',
            name='consumable',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='NEMO.Consumable'),
        ),
        migrations.AlterField(
            model_name='reservationconfiguration',
            name='reservation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='NEMO.Reservation'),
        ),
        migrations.AlterField(
            model_name='resource',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='NEMO.ResourceCategory'),
        ),
        migrations.AlterField(
            model_name='safetyissue',
            name='reporter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reported_safety_issues', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='safetyissue',
            name='resolver',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_safety_issues', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='scheduledoutage',
            name='creator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='scheduledoutage',
            name='resource',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='NEMO.Resource'),
        ),
        migrations.AlterField(
            model_name='scheduledoutage',
            name='tool',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='NEMO.Tool'),
        ),
        migrations.AlterField(
            model_name='staffcharge',
            name='ad_hoc_replaced',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='staffcharge',
            name='charge_end_override',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='staffcharge',
            name='customer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='staff_charge_customer', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='staffcharge',
            name='override_confirmed',
            field=models.BooleanField(blank=True, default=False),
        ),
        migrations.AlterField(
            model_name='staffcharge',
            name='project',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='staff_charge_project', to='NEMO.Project'),
        ),
        migrations.AlterField(
            model_name='staffcharge',
            name='staff_member',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='staff_charge_actor', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='staffchargeproject',
            name='customer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='staffchargeproject',
            name='project',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='NEMO.Project'),
        ),
        migrations.AlterField(
            model_name='task',
            name='creator',
            field=models.ForeignKey(help_text='The user who created the task.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_tasks', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='task',
            name='last_updated_by',
            field=models.ForeignKey(blank=True, help_text='The last user who modified this task. This should always be a staff member.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='task',
            name='problem_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='problem_category', to='NEMO.TaskCategory'),
        ),
        migrations.AlterField(
            model_name='task',
            name='resolution_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolution_category', to='NEMO.TaskCategory'),
        ),
        migrations.AlterField(
            model_name='task',
            name='resolver',
            field=models.ForeignKey(blank=True, help_text='The staff member who resolved the task.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='task_resolver', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='task',
            name='tool',
            field=models.ForeignKey(help_text='The tool that this task relates to.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='NEMO.Tool'),
        ),
        migrations.AlterField(
            model_name='taskhistory',
            name='task',
            field=models.ForeignKey(help_text='The task that this historical entry refers to', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='history', to='NEMO.Task'),
        ),
        migrations.AlterField(
            model_name='taskhistory',
            name='user',
            field=models.ForeignKey(help_text='The user that changed the task to this status', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='tool',
            name='core_id',
            field=models.ForeignKey(help_text='The core facility of which this tool is part.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tool_core', to='NEMO.Core'),
        ),
        migrations.AlterField(
            model_name='tool',
            name='grant_physical_access_level_upon_qualification',
            field=models.ForeignKey(blank=True, help_text='The designated physical access level is granted to the user upon qualification for this tool.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='NEMO.PhysicalAccessLevel'),
        ),
        migrations.AlterField(
            model_name='tool',
            name='primary_owner',
            field=models.ForeignKey(help_text='The staff member who is responsible for administration of this tool.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primary_tool_owner', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='tool',
            name='requires_area_access',
            field=models.ForeignKey(blank=True, help_text='Indicates that this tool is physically located in a billable area and requires an active area access record in order to be operated.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='NEMO.Area'),
        ),
        migrations.AlterField(
            model_name='trainingsession',
            name='project',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='NEMO.Project'),
        ),
        migrations.AlterField(
            model_name='trainingsession',
            name='tool',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='NEMO.Tool'),
        ),
        migrations.AlterField(
            model_name='trainingsession',
            name='trainee',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='student_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='trainingsession',
            name='trainer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='teacher_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='usageevent',
            name='operator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='usage_event_operator', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='usageevent',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='usage_event_project', to='NEMO.Project'),
        ),
        migrations.AlterField(
            model_name='usageevent',
            name='tool',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='NEMO.Tool'),
        ),
        migrations.AlterField(
            model_name='usageevent',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='usage_event_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='userrelationship',
            name='type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_relationship_type', to='NEMO.UserRelationshipType'),
        ),
        migrations.AlterField(
            model_name='userrelationship',
            name='user_1',
            field=models.ForeignKey(help_text='The person who is the manager, superviser, PI, or other role higher in the structure', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='upper_tier_role', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='userrelationship',
            name='user_2',
            field=models.ForeignKey(help_text='The person who is the subordinate, supervisee, delegate or other role lower in the structure.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lower_tier_role', to=settings.AUTH_USER_MODEL),
        ),
    ]
